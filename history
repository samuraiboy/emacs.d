;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(c-set-style-history counsel-describe-symbol-history shell-command-history minibuffer-history swiper-history file-name-history ivy-history counsel-M-x-history buffer-name-history read-expression-history evil-ex-history ido-file-history))
(setq c-set-style-history '("linux"))
(setq counsel-describe-symbol-history '(#("^" 0 1 (ivy-index 19))))
(setq shell-command-history '("shell" "cd"))
(setq swiper-history '(#("mAvatarView" 0 11 (ivy-index 6)) #("     private MXAvatarImageView mAvatarView;" 0 43 (ivy-index 0)) #("dianxin2" 0 8 (ivy-index 0)) #("youlitiancheng1" 0 15 (ivy-index 0)) #("w3m" 0 3 (ivy-index 0)) #("cpp" 0 3 (ivy-index 1)) #("yasn" 0 4 (ivy-index 16))))
(setq file-name-history '("/Volumes/WORK/SSWork/huahua/huahua/chat-sdk/src/main/java/com/moxtra/binder/ui/home/MainActivity.java" "/Volumes/WORK/SSWork/huahua/huahua/chat-sdk/src/main/res/layout/home_top.xml" "/Volumes/WORK/SSWork/huahua/huahuahulei/chat-sdk/src/main/java/com/moxtra/binder/ui/home/MainActivity.java" "/Volumes/WORK/SSWork/560/Client/land/Classes/games/brnn/BRNNLayer.cpp" "/Users/sunshuai/.emacs.d/lisp/init-autoload.el" "/Users/sunshuai/.emacs.d/init.el" "/Volumes/WORK/SSWork/560/Client" "TAGS" "/Volumes/WORK/SSWork/560/Client/land/proj.android-studio/app/build.gradle" "/Volumes/WORK/SSWork/560/Client/.gitignore" "/Volumes/WORK/SSWork/560/Client/land/Resources/config/application.xml" "/Volumes/WORK/SSWork/560/Client/land/Classes/hall/AHBag.h" "/Volumes/WORK/SSWork/560/Client/land/Classes/hall/AHBag.cpp" "/Users/sunshuai/.emacs.d/elpa/web-mode-15/web-mode.el" "/Volumes/WORK/SSWork/560/Client/land/Classes/AppDelegate.h" "/Users/sunshuai/.emacs.d/lisp/init-utils.el" "/Users/sunshuai/.emacs.d/elpa/cpputils-cmake-5.5/cpputils-cmake.el" "/Users/sunshuai/.emacs.d/elpa/cpputils-cmake-5.5/cpputils-cmake-autoloads.el" "/Volumes/WORK/SSWork/560/Client/land/Classes/hall/AHBag.h" "/Volumes/WORK/SSWork/560/Client/land/Classes/hall/DialogBank.h" "/Users/sunshuai/.emacs.d/lisp/init-ctags.el" "/Users/sunshuai/.emacs.d/lisp/init-cc-mode.el" "/Users/sunshuai/.emacs.d/lisp/init-yasnippet.el" "/Users/sunshuai/.emacs.d/custom-set-variables.el" "/Users/sunshuai/.emacs.d/company-statistics-cache.el" "/Users/sunshuai/.emacs.d/lisp/init-gtags.el" "~/.emacs.d/init.el" "/users" "/Volumes/WORK/SSWork/560/Client/land/Classes/hall/DialogActivity.cpp" "/Volumes/WORK/SSWork/560/Client/land/Classes/hall/DialogActivity.h" "/Users/sunshuai/.emacs.d/README.org" "/Users/sunshuai/.emacs.keyfreq" "~/.emacs.d" #("/Volumes/WORK/SSWork/560/HotfixResFiles/copy-android-res.sh" 25 28 (face flx-highlight-face)) "~/.emacs.d/custom-set-variables.el"))
(setq ivy-history '("*clang-error*" "BRNNLayer.cpp:332: BRNNLayer::~BRNNLayer()" "application.xml" "*Help*" "AHBag.cpp" "TUTORIAL.cn" #("i" 0 1 (ivy-index 0)) #("ini" 0 3 (ivy-index 0)) "AHBag.h" "DialogActivity.h" "hell" "*Completions*" "init-cc-mode.el" "*scratch*"))
(setq counsel-M-x-history '(#("^" 0 1 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) #("^com" 0 4 (ivy-index 0)) #("^co" 0 3 (ivy-index 2)) #("^comment-" 0 9 (ivy-index 8)) #("du" 0 2 (ivy-index 0)) #("^du" 0 3 (ivy-index 3)) #("pac" 0 3 (ivy-index 1)) #("^package" 0 8 (ivy-index 2)) #("^package-li" 0 11 (ivy-index 0)) #("^company-comp" 0 13 (ivy-index 0)) #("^comp" 0 5 (ivy-index 5))))
(setq buffer-name-history '("BRNNLayer.cpp" "init-autoload.el" "AHBag.cpp" "AppDelegate.h" "init-ctags.el" "application.xml" "DialogBank.h" "AHBag.h" "init.el" "cpputils-cmake-autoloads.el" "cpputils-cmake.el" "init-utils.el" "*Messages*" "*scratch*" "init-cc-mode.el" "init-yasnippet.el" "custom-set-variables.el" "*Shell Command Output*" "*shell*" "company-statistics-cache.el" "*clang-error*" "init-gtags.el" "*clang-output*" "users" "sunshuai" ".emacs.d" "*Ibuffer*" "*Help*" "*Network Security Manager*" "*Packages*" "DialogActivity.cpp" "DialogActivity.h" "*Completions*" "hell" "README.org" ".emacs.keyfreq" "copy-android-res.sh"))
(setq read-expression-history '("wq"))
(setq evil-ex-history '(#("wq" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq ido-file-history '("MainActivity.java" "home_top.xml" "BRNNLayer.cpp" "init-autoload.el" "init.el" "build.gradle" ".gitignore" "application.xml" "AHBag.cpp" "web-mode.el" "AppDelegate.h" "init-utils.el" "cpputils-cmake.el" "cpputils-cmake-autoloads.el" "DialogBank.h" "init-ctags.el" "init-cc-mode.el" "init-yasnippet.el" "custom-set-variables.el" "company-statistics-cache.el" "init-gtags.el" "init.tl" "DialogActivity.cpp" "DialogActivity.h" "README.org" ".emacs.keyfreq" nil "copy-android-res.sh"))
(setq search-ring '("mAvatarView" "w"))
(setq regexp-search-ring '("mAvatarView" "\\(    private\\).*?\\(MXAvatarImageView\\).*?\\(mAvatarView;\\)" "dianxin2" "youlitiancheng1" "w3m" "cpp" "yasn"))
(setq kill-ring '(#("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDqalEXr1gGtmcP/4EakKSYk2ghkTCdcrZRN3MS7L+zucfq2x90zLkZ5tEQskj6LC1xgOCTC38pf3zQI3bUsnhV1MSsmLTIFmeHRG234oroZkP1ZA1Zter8qz5oiiq39nKHHdwpE9Xj3aq6tu3wVHHvhbRh9Zm4Il+VidGg5lYbpW4jd+0F1eG9FMztP6Sr7PX5vwoYU58lPSyVZz+/IMgVAKcCtspeZJI6NCoWOuS318v0+5mlj9J7/paJnYsHFTYppWJEX0nLc67mddp9f8zHtdaoA0NmAXWz1cn0jglZM+cBKzJGAQs4rsmYXXQbBTgLGbIHQhqtgSIvE2S8zPOt sunshuai@177lele.com" 0 401 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t)) #("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDqalEXr1gGtmcP/4EakKSYk2ghkTCdcrZRN3MS7L+zucfq2x90zLkZ5tEQskj6LC1xgOCTC38pf3zQI3bUsnhV1MSsmLTIFmeHRG234oroZkP1ZA1Zter8qz5oiiq39nKHHdwpE9Xj3aq6tu3wVHHvhbRh9Zm4Il+VidGg5lYbpW4jd+0F1eG9FMztP6Sr7PX5vwoYU58lPSyVZz+/IMgVAKcCtspeZJI6NCoWOuS318v0+5mlj9J7/paJnYsHFTYppWJEX0nLc67mddp9f8zHtdaoA0NmAXWz1cn0jglZM+cBKzJGAQs4rsmYXXQbBTgLGbIHQhqtgSIvE2S8zPOt sunshuai@177lele.com" 0 401 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t)) "git@github.com:samuraiboy/emacs.d.git" #("testsimpleclip!" 0 15 (fontified t)) "testsimpleclip!" "cocos compile -p android -m release --app-abi=armeabi-v7a" #("
    return outCondition;" 0 1 (fontified t) 1 5 (fontified t) 5 11 (face font-lock-keyword-face fontified t) 11 25 (fontified t)) #("Condition();

    GameFrame::init
" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (face font-lock-constant-face fontified t) 23 24 (face font-lock-constant-face fontified t) 24 25 (face font-lock-constant-face fontified t) 25 26 (face font-lock-constant-face fontified t) 26 27 (face font-lock-constant-face fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t)) #("    GameFrame::onExit

" 0 4 (fontified t) 4 5 (fontified t face font-lock-constant-face) 5 6 (fontified t face font-lock-constant-face) 6 7 (fontified t face font-lock-constant-face) 7 8 (fontified t face font-lock-constant-face) 8 9 (fontified t face font-lock-constant-face) 9 10 (fontified t face font-lock-constant-face) 10 11 (fontified t face font-lock-constant-face) 11 12 (fontified t face font-lock-constant-face) 12 13 (fontified t face font-lock-constant-face) 13 14 (fontified t) 14 15 (fontified t) 15 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t)) #("msg);
    });
}

" 0 21 (fontified t)) #("void AHBag::buyItem(uint32_t ah_id, uint32_t price, std::string name)" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 10 (face font-lock-constant-face fontified t) 10 12 (fontified t) 12 19 (face font-lock-function-name-face fontified t) 19 20 (c-type c-decl-arg-start fontified t) 20 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 34 (face font-lock-variable-name-face fontified t) 34 35 (c-type c-decl-arg-start fontified t) 35 36 (fontified t) 36 44 (face font-lock-type-face fontified t) 44 45 (fontified t) 45 50 (face font-lock-variable-name-face fontified t) 50 51 (c-type c-decl-arg-start fontified t) 51 52 (fontified t) 52 55 (face font-lock-constant-face fontified t) 55 57 (fontified t) 57 62 (face font-lock-type-face fontified t) 62 63 (c-type c-decl-id-start face font-lock-type-face fontified t) 63 64 (fontified t) 64 68 (face font-lock-variable-name-face fontified t) 68 70 (fontified t)) #("else
	{

        {
            
        }
" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t) 6 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 34 (fontified t) 34 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t)) #("        else" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t)) #("
" 0 1 (fontified t)) "(setq gtags-mode-hook
'(lambda ()
(local-set-key \"\\M-t\" 'gtags-find-tag)
(local-set-key \"\\M-r\" 'gtags-find-rtag)
(local-set-key \"\\M-s\" 'gtags-find-symbol)
(local-set-key \"\\C-t\" 'gtags-pop-stack)
))" #("
" 0 1 (fontified t)) "(setq c-mode-hook
'(lambda ()
(gtags-mode 1)))
(setq c++-mode-hook
'(lambda ()
(gtags-mode 1)))" "/usr/local/bin/gtags" "/usr/local/bin/global" "(setq load-path (cons \"global的路径\" load-path))
(setq load-path (cons \"gtags的路径\" load-path))
(setq load-path (cons \"gtags.el文件的路径\" load-path))
(autoload 'gtags-mode \"gtags\" \"\" t)" #("int AHBag::

" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t) 4 5 (fontified t face font-lock-constant-face) 5 6 (fontified t face font-lock-constant-face) 6 7 (fontified t face font-lock-constant-face) 7 8 (fontified t face font-lock-constant-face) 8 9 (fontified t face font-lock-constant-face) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) #("(setq company-clang-arguments)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-1-face)) 30 31 (fontified t)) #("TAG);

    this->addChild(node, 0, UI_DEFAULT_TAG);
    " 0 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 12 (fontified t) 12 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 57 (fontified t)) #("
" 0 1 (fontified t)) #("cc-search-directories" 0 21 (fontified t)) "GTAGSLIBPATH" #("GTAGSLIBPATH" 0 12 (fontified t face font-lock-string-face)) #("  \"add external library directory to environment variable GTAGSLIBPATH.\\ngtags will can that directory if needed.\\nC-u M-x add-gtagslibpath will remove the directory from GTAGSLIBPATH.\"
" 0 2 (fontified t) 2 185 (fontified t face font-lock-doc-face) 185 186 (fontified t)) "/usr/bin/clang -fsyntax-only -Xclang -code-completion-macros -x c++ -Xclang -code-completion-at=-:68:17 -" #("

" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("h\"
#include \"common/ui/TipMessage.hk
" 0 2 (face font-lock-string-face fontified t c-in-sws t) 2 3 (fontified t c-in-sws t) 3 4 (fontified t category c-cpp-delimiter c-in-sws t) 4 5 (fontified t c-is-sws t c-in-sws t) 5 6 (c-is-sws t fontified t) 6 7 (fontified t face font-lock-preprocessor-face) 7 8 (fontified t face font-lock-preprocessor-face) 8 9 (fontified t face font-lock-preprocessor-face) 9 10 (fontified t face font-lock-preprocessor-face) 10 11 (fontified t face font-lock-preprocessor-face) 11 12 (fontified t face font-lock-preprocessor-face) 12 13 (fontified t face font-lock-preprocessor-face) 13 14 (fontified t) 14 15 (fontified t face font-lock-warning-face) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 28 (face font-lock-string-face fontified t) 28 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face)) #("\"
" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) "(add-hook 'c-mode-common-hook
          (lambda ()
            (if (derived-mode-p 'c-mode 'c++-mode)
                (cppcm-reload-all)
              )))
;; OPTIONAL, somebody reported that they can use this package with Fortran
(add-hook 'c90-mode-hook (lambda () (cppcm-reload-all)))
;; OPTIONAL, avoid typing full path when starting gdb
(global-set-key (kbd \"C-c C-g\")
 '(lambda ()(interactive) (gud-gdb (concat \"gdb --fullname \" (cppcm-get-exe-path-current-buffer)))))
;; OPTIONAL, some users need specify extra flags forwarded to compiler
(setq cppcm-extra-preprocss-flags-from-user '(\"-I/usr/src/linux/include\" \"-DNDEBUG\"))" #("  (add-to-list 'load-path \"~/.emacs.d/lisp/\")
  (require 'cpputils-cmake)
" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 26 (fontified t) 26 44 (fontified t face font-lock-string-face) 44 45 (fontified t face (rainbow-delimiters-depth-2-face)) 45 46 (fontified t) 46 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-2-face)) 49 56 (fontified t face font-lock-keyword-face) 56 58 (fontified t) 58 67 (fontified t face font-lock-constant-face) 67 72 (fontified t face font-lock-constant-face) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 74 (fontified t)) #("cmake)
" 0 5 (fontified t face font-lock-constant-face) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t)) #("(add-to-list 'load-path \"~/.emacs.d/lisp/\")


" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 24 (fontified t) 24 42 (face font-lock-string-face fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t)) #("(require 'cpputils-cmake)" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 8 (fontified t face font-lock-keyword-face) 8 10 (fontified t) 10 24 (fontified t face font-lock-constant-face) 24 25 (fontified t face (rainbow-delimiters-depth-2-face))) "(add-to-list 'load-path \"~/.emacs.d/lisp/\")
(require 'cpputils-cmake)" #("text-mode-hook" 0 14 (fontified t)) #("c-mode-common-hook" 0 18 (fontified t)) #("text-mode-hook" 0 14 (fontified t)) #("c-mode-common-hook" 0 18 (fontified t)) #(" -->            <Host>accountios.166lele.com</Host>  
            <!-- <Host>testaccountios.566560.com</Host> -->
<!--        <Host>fortaccountios.566560.com</Host>-->
<!--          <Host>192.168.8.62:801</Host>-->
        </Account>
    </Server>
    <Version>
        <!-- 版本号，当main id不同时，为强制更新 -->
        <main>2</main>
        <second>1</second>
        <third>5</third>
        <dis>2.1.5</dis>
    </Version>
    <ah>
        <PriceLimitMin>10000</PriceLimitMin>
        <PriceLimitMax>20000000</PriceLimitMax>
    </ah>
    <!--            企业唯一编号-->
    <QuyingEnterpriseId>a6a6a4fd570e4b1eb7bac26cba2e87d2</QuyingEnterpriseId>
</Application>" 0 3 (font-lock-face web-mode-comment-face tag-type comment) 3 4 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "host") 17 21 (font-lock-face web-mode-html-tag-face tag-type start tag-name "host") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "host") 44 45 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "host") 45 46 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "host") 46 50 (font-lock-face web-mode-html-tag-face tag-type end tag-name "host") 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "host") 66 67 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 67 112 (font-lock-face web-mode-comment-face tag-type comment) 112 113 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 114 115 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 115 166 (font-lock-face web-mode-comment-face tag-type comment) 166 167 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 168 169 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 169 213 (font-lock-face web-mode-comment-face tag-type comment) 213 214 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 223 224 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "account") 224 225 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "account") 225 232 (font-lock-face web-mode-html-tag-face tag-type end tag-name "account") 232 233 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "account") 238 239 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "server") 239 240 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "server") 240 246 (font-lock-face web-mode-html-tag-face tag-type end tag-name "server") 246 247 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "server") 252 253 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "version") 253 260 (font-lock-face web-mode-html-tag-face tag-type start tag-name "version") 260 261 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "version") 270 271 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 271 299 (font-lock-face web-mode-comment-face tag-type comment) 299 300 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 309 310 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "main") 310 314 (font-lock-face web-mode-html-tag-face tag-type start tag-name "main") 314 315 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "main") 316 317 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "main") 317 318 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "main") 318 322 (font-lock-face web-mode-html-tag-face tag-type end tag-name "main") 322 323 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "main") 332 333 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "second") 333 339 (font-lock-face web-mode-html-tag-face tag-type start tag-name "second") 339 340 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "second") 341 342 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "second") 342 343 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "second") 343 349 (font-lock-face web-mode-html-tag-face tag-type end tag-name "second") 349 350 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "second") 359 360 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "third") 360 365 (font-lock-face web-mode-html-tag-face tag-type start tag-name "third") 365 366 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "third") 367 368 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "third") 368 369 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "third") 369 374 (font-lock-face web-mode-html-tag-face tag-type end tag-name "third") 374 375 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "third") 384 385 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "dis") 385 388 (font-lock-face web-mode-html-tag-face tag-type start tag-name "dis") 388 389 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "dis") 394 395 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "dis") 395 396 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "dis") 396 399 (font-lock-face web-mode-html-tag-face tag-type end tag-name "dis") 399 400 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "dis") 405 406 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "version") 406 407 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "version") 407 414 (font-lock-face web-mode-html-tag-face tag-type end tag-name "version") 414 415 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "version") 420 421 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "ah") 421 423 (font-lock-face web-mode-html-tag-face tag-type start tag-name "ah") 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "ah") 433 434 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "pricelimitmin") 434 447 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pricelimitmin") 447 448 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "pricelimitmin") 453 454 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "pricelimitmin") 454 455 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "pricelimitmin") 455 468 (font-lock-face web-mode-html-tag-face tag-type end tag-name "pricelimitmin") 468 469 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "pricelimitmin") 478 479 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "pricelimitmax") 479 492 (font-lock-face web-mode-html-tag-face tag-type start tag-name "pricelimitmax") 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "pricelimitmax") 501 502 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "pricelimitmax") 502 503 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "pricelimitmax") 503 516 (font-lock-face web-mode-html-tag-face tag-type end tag-name "pricelimitmax") 516 517 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "pricelimitmax") 522 523 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "ah") 523 524 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "ah") 524 526 (font-lock-face web-mode-html-tag-face tag-type end tag-name "ah") 526 527 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "ah") 532 533 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 533 556 (font-lock-face web-mode-comment-face tag-type comment) 556 557 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 562 563 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "quyingenterpriseid") 563 581 (font-lock-face web-mode-html-tag-face tag-type start tag-name "quyingenterpriseid") 581 582 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "quyingenterpriseid") 614 615 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "quyingenterpriseid") 615 616 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "quyingenterpriseid") 616 634 (font-lock-face web-mode-html-tag-face tag-type end tag-name "quyingenterpriseid") 634 635 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "quyingenterpriseid") 636 637 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "application") 637 638 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "application") 638 649 (font-lock-face web-mode-html-tag-face tag-type end tag-name "application") 649 650 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "application")) "
            " #("1))
    ))
  
" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-4-face)) 2 3 (fontified t face (rainbow-delimiters-depth-3-face)) 3 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-2-face)) 9 10 (fontified t face (rainbow-delimiters-depth-1-face)) 10 11 (fontified t) 11 13 (fontified t) 13 14 (fontified t)) #("
" 0 1 (fontified t)) #("  (interactive)
(setq buffer-display-table (make-display-table))
(aset buffer-display-table ?\\^M [])" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-1-face)) 3 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 21 (face font-lock-keyword-face fontified t) 21 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-2-face) fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-1-face) fontified t) 66 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-2-face) fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) fontified t) 99 100 (face (rainbow-delimiters-depth-1-face) fontified t)) #(" containing mixed UNIX and DOS line endings.\"Do not show ^M in files\"" 0 44 (fontified t face font-lock-string-face) 44 69 (fontified t face font-lock-string-face)) "  \"Do not show ^M in files containing mixed UNIX and DOS line endings.\"
  (interactive)
  (setq buffer-display-table (make-display-table))
  (aset buffer-display-table ?\\^M []))" #("1))
    ))
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t) 2 3 (face (rainbow-delimiters-depth-3-face) fontified t) 3 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 10 (face (rainbow-delimiters-depth-1-face) fontified t) 10 11 (fontified t)) #("(defun remove-dos-eol ()
  \"Do not show ^M in files containing mixed UNIX and DOS line endings.\"
  (interactive)
  (setq buffer-display-table (make-display-table))
  (aset buffer-display-table ?\\^M []))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 21 (face font-lock-function-name-face fontified t) 21 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-2-face) fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 27 (fontified t) 27 96 (face font-lock-doc-face fontified t) 96 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-2-face) fontified t) 100 111 (face font-lock-keyword-face fontified t) 111 112 (face (rainbow-delimiters-depth-2-face) fontified t) 112 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-2-face) fontified t) 116 120 (face font-lock-keyword-face fontified t) 120 142 (fontified t) 142 143 (face (rainbow-delimiters-depth-3-face) fontified t) 143 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-3-face) fontified t) 162 163 (face (rainbow-delimiters-depth-2-face) fontified t) 163 166 (fontified t) 166 167 (face (rainbow-delimiters-depth-2-face) fontified t) 167 198 (fontified t) 198 199 (face (rainbow-delimiters-depth-3-face) fontified t) 199 200 (face (rainbow-delimiters-depth-3-face) fontified t) 200 201 (face (rainbow-delimiters-depth-2-face) fontified t) 201 202 (face (rainbow-delimiters-depth-1-face) fontified t)) "(defun remove-dos-eol ()
  \"Do not show ^M in files containing mixed UNIX and DOS line endings.\"
  (interactive)
  (setq buffer-display-table (make-display-table))
  (aset buffer-display-table ?\\^M []))" #("





" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) #("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("
" 0 1 (fontified t)) #("  (defun remove-dos-eol ()
    \"Do not show ^M in files containing mixed UNIX and DOS line endings.\"
    (interactive)
    (setq buffer-display-table (make-display-table))
    (aset buffer-display-table ?\\^M []))

(add-hook 'text-mode-hook 'remove-dos-eol)

" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-1-face)) 3 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-2-face)) 25 26 (fontified t face (rainbow-delimiters-depth-2-face)) 26 31 (fontified t) 31 41 (fontified t face font-lock-doc-face) 41 100 (fontified t face font-lock-doc-face) 100 101 (fontified t) 101 105 (fontified t) 105 106 (fontified t face (rainbow-delimiters-depth-2-face)) 106 117 (fontified t face font-lock-keyword-face) 117 118 (fontified t face (rainbow-delimiters-depth-2-face)) 118 123 (fontified t) 123 124 (fontified t face (rainbow-delimiters-depth-2-face)) 124 128 (fontified t face font-lock-keyword-face) 128 150 (fontified t) 150 151 (fontified t face (rainbow-delimiters-depth-3-face)) 151 169 (fontified t) 169 170 (fontified t face (rainbow-delimiters-depth-3-face)) 170 171 (fontified t face (rainbow-delimiters-depth-2-face)) 171 176 (fontified t) 176 177 (fontified t face (rainbow-delimiters-depth-2-face)) 177 208 (fontified t) 208 209 (fontified t face (rainbow-delimiters-depth-3-face)) 209 210 (fontified t face (rainbow-delimiters-depth-3-face)) 210 211 (fontified t face (rainbow-delimiters-depth-2-face)) 211 212 (fontified t face (rainbow-delimiters-depth-1-face)) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t face (rainbow-delimiters-depth-1-face)) 215 255 (fontified t) 255 256 (fontified t face (rainbow-delimiters-depth-1-face)) 256 257 (fontified t) 257 258 (fontified t)) #("  (add-hook 'text-mode-hook 'remove-dos-eol)
" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-1-face) fontified t) 3 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (fontified t)) #("  (add-hook 'text-mode-hook 'remove-dos-eol)

  (defun remove-dos-eol ()
    \"Do not show ^M in files containing mixed UNIX and DOS line endings.\"
    (interactive)
    (setq buffer-display-table (make-display-table))
    (aset buffer-display-table ?\\^M []))
" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 45 (fontified t) 45 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-2-face)) 49 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t) 55 69 (fontified t face font-lock-function-name-face) 69 70 (fontified t) 70 71 (fontified t face (rainbow-delimiters-depth-3-face)) 71 72 (fontified t face (rainbow-delimiters-depth-3-face)) 72 77 (fontified t) 77 146 (fontified t face font-lock-doc-face) 146 151 (fontified t) 151 152 (fontified t face (rainbow-delimiters-depth-3-face)) 152 163 (fontified t face font-lock-keyword-face) 163 164 (fontified t face (rainbow-delimiters-depth-3-face)) 164 169 (fontified t) 169 170 (fontified t face (rainbow-delimiters-depth-3-face)) 170 174 (fontified t face font-lock-keyword-face) 174 196 (fontified t) 196 197 (fontified t face (rainbow-delimiters-depth-4-face)) 197 215 (fontified t) 215 216 (fontified t face (rainbow-delimiters-depth-4-face)) 216 217 (fontified t face (rainbow-delimiters-depth-3-face)) 217 218 (fontified t) 218 222 (fontified t) 222 223 (fontified t face (rainbow-delimiters-depth-3-face)) 223 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-4-face)) 255 256 (fontified t face (rainbow-delimiters-depth-4-face)) 256 257 (fontified t face (rainbow-delimiters-depth-3-face)) 257 258 (fontified t face (rainbow-delimiters-depth-2-face)) 258 259 (fontified t)) #("  ;; my personal setup, other major-mode specific setup need it.
  ;; It's dependent on init-site-lisp.el
  (if (file-exists-p \"~/.custom.el\") (load-file \"~/.custom.el\"))" 0 2 (fontified t) 2 5 (fontified t face font-lock-comment-delimiter-face) 5 65 (fontified t face font-lock-comment-face) 65 67 (fontified t) 67 70 (fontified t face font-lock-comment-delimiter-face) 70 106 (fontified t face font-lock-comment-face) 106 108 (fontified t) 108 109 (fontified t face (rainbow-delimiters-depth-2-face)) 109 111 (fontified t face font-lock-keyword-face) 111 112 (fontified t) 112 113 (fontified t face (rainbow-delimiters-depth-3-face)) 113 127 (fontified t) 127 141 (fontified t face font-lock-string-face) 141 142 (fontified t face (rainbow-delimiters-depth-3-face)) 142 143 (fontified t) 143 144 (fontified t face (rainbow-delimiters-depth-3-face)) 144 154 (fontified t) 154 168 (fontified t face font-lock-string-face) 168 169 (fontified t face (rainbow-delimiters-depth-3-face)) 169 170 (fontified t face (rainbow-delimiters-depth-2-face))) #("
" 0 1 (fontified t))))
